name: Deploy ACA Demo

on:
  workflow_dispatch:
    inputs:
      location:
        description: 'Location'
        required: true
        default: 'northeurope'
      base-name:
        description: 'Base name'
        required: true
      demo-type:
        description: 'Demo type'
        required: true
        default: 'default'
        type: choice
        options:
          - default
          - appgw
          - frontdoor
          - slim
      dns-record:
        description: 'DNS Record (for AppGW demo)'
        required: false
  
permissions:
  id-token: write
  contents: read
  
jobs:
    deploy:
      runs-on: ubuntu-latest
  
      steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure CLI script file
        uses: azure/cli@v2
        with:
            azcliversion: 2.63.0
            inlineScript: |
              LOCATION=${{ inputs.location }} 
              BASE_NAME=${{ inputs.base-name }}
              RESOURCE_GROUP_NAME=$BASE_NAME-rg
              DEPLOYMENT_NAME=$BASE_NAME-deployment-$(date +%s)
              if [ $(az group exists --name $RESOURCE_GROUP_NAME) = false ]; then
                az group create --name $RESOURCE_GROUP_NAME --location $LOCATION
              fi
              if [ $DEMO_TYPE = 'appgw' ]; then
                az deployment group create --name $DEPLOYMENT_NAME --resource-group $RESOURCE_GROUP_NAME --template-file infra/main.bicep --parameters infra/parameters.appgw.json \
                  --parameters baseName=$BASE_NAME \
                  --parameters dnsZoneName=${{ secrets.DNS_ZONE_NAME }} \
                  --parameters dnsZoneRecordName=${{ inputs.dns-record }} ? ${{ inputs.dns-record }} : ${{ inputs.base-name }} \
                  --parameters certificateKeyVaultName=${{ secrets.CERT_KEY_VAULT_NAME }} \
                  --parameters certificateKeyVaultResourceGroup=${{ secrets.CERT_KEY_VAULT_RG_NAME }} \
                  --parameters certificateSecretId=${{ secrets.CERT_SECRET_ID}}
              else
                az deployment group create --name $DEPLOYMENT_NAME --resource-group $RESOURCE_GROUP_NAME --template-file infra/main.bicep --parameters infra/parameters.${{ inputs.demo-type }}.json --parameters baseName=$BASE_NAME
              fi
        env:
          LOCATION: ${{ inputs.location }}
          BASE_NAME: ${{ inputs.base-name }}
          DEMO_TYPE: ${{ inputs.demo-type }}
          DNS_RECORD: ${{ inputs.dns-record }}